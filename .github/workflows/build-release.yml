name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build-release:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --onefile `
            --name YoutubeDownloader `
            --hidden-import yt_dlp `
            --hidden-import win32ctypes.pywin32 `
            --hidden-import pywintypes `
            --hidden-import win32api `
            --hidden-import gradio `
            --hidden-import gradio_client `
            --hidden-import safehttpx `
            --hidden-import groovy `
            --collect-all gradio `
            --collect-all gradio_client `
            --collect-all safehttpx `
            --collect-all win32ctypes `
            --collect-all pywin32_ctypes `
            --collect-all groovy `
            --additional-hooks-dir=./hooks `
            --runtime-hook=./runtime_hook.py `
            app.py

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/YoutubeDownloader.exe
          tag_name: v${{ github.run_number }}
          release_name: "Release v${{ github.run_number }}"
          body: "Automated release based on commit ${{ github.sha }}"
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}